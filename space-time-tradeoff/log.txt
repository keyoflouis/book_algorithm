权衡速度和空间


本章算法： 比较计数排序o，KMP，horspool 和 boyer-moore 算法？，散列表（开散列，闭散列），B树


    比较计数排序：难点，内循环的开始位置和count[i],count[j]有极大的关系。

    字符串匹配：

            horspool: 根据子串建立坏字符表（每个字母到最右侧的距离），从左往右移动，每次匹配时从右往左匹配。

            eg：：“ THIS IS A SIMPLE EXAMPLE” ，查找“SIMPLE”，
                    建立以下坏字符表，然后开始匹配
                    S，5
                    I，4
                    M，3
                    P，2
                    L，1
                    E，0
                    其他，6
                匹配过程：  第一轮我们将子串的最后一个字符E与T中位置6的字符S比较，它们不匹配。
                我们查找字母S在坏字符表中的对应，发现S的值是5。
                这意味着我们可以将模式字符串向右移动5位，使P的S对齐于T中的S。

            boyer-moore：暂不考虑（有简化版的horspool即可）

            KMP：暂不考虑

    散列表：哈希表（开放寻址，散列表，两种解决哈希冲突的办法）

    B树：（2-3树的一般形式 https://www.youtube.com/watch?v=K1a2Bk8NrYQ ，也许可以顺便复习一下文件系统的实现呢）