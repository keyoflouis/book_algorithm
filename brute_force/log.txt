
2024.4.18
之前就已经写过无数遍，选择，冒泡，排序了。
本章提到过，选择o，冒泡o，蛮力字符串匹配x，最近数值对x，凸包问题？，顺序查找x，DFS？，BFS？，
穷举查找（背包问题，分配问题）？

总的来说本章最需要关注的就是，凸包问题, DFS 和 BFS

 -----
    凸包问题：
          如何构建凸包才是关键。
          简单来说，如果你想象这些点是在一张纸上，然后用一根橡皮筋围绕这些点拉紧，橡皮筋最终形成的形状就是这个点集的凸包。
               这里的暴力求解用到了set来自动比较大小排序，并且使用了set去除重复的点

     DFS和BFS
          先用stl现成的数据结构写出图这个数据结构，再做DFS和BFS
          图可以用两种方式存储，邻接矩阵和邻接表
               邻接表：A ["B","C"];B["A","C"];
               邻接矩阵：   A  B  C
                         A
                         B
                         C
          DFS和BFS不只能用在图上，也可以用在二叉树的遍历上，（都试试）
               用在图上的时候，似乎栈是最好的选择，用在二叉树的时候队列是最好的选择

    NP问题，不能在多项式时间内找到解的问题
         旅行商问题：遍历所有的点，且每个点仅遍历一次
         背包问题：戴夫捞鱼，限重，捞什么鱼才能赚最多的钱。

    分配问题：一个人去不同的岗位有不同的酬劳，如何分配任务才能支出最小
    
    

